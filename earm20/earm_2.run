#---------ANNEAL ALL section
import scipy.optimize.anneal
import numpy
import pysb.anneal_sundials
from earm_2_0 import model
envlist, paramarr = pysb.anneal_sundials.annlinit(model)
xpfile = numpy.load('EC-RP_IMS-RP_IC-RP_data_for_models.npz')
xpnormdata = xpfile['arr_0']


initfile = numpy.load('earm2_0_init_parminfo.npz')
initidx = initfile['arr_0']

lb, ub = pysb.anneal_sundials.logparambounds(paramarr, omag=1, useparams=initidx, usemag=0)

initarr = numpy.zeros_like(paramarr) + 0.5
lower = numpy.zeros(len(paramarr))
upper = numpy.ones(len(paramarr))

# DATA IS ALREADY NORMALIZED, NORM = TRUE
# envlist is a list of tuples which says which array from xpdata corresponds to simulation observables
annlout = scipy.optimize.anneal(pysb.anneal_sundials.annealfxn, initarr, args=(20000, model, envlist, xpnormdata, [(2,1), (5,2), (8,3)], lb, ub), lower=0.0, upper=1.0, full_output=1)

annlout = scipy.optimize.anneal(pysb.anneal_sundials.annealfxn, initarr, args=(20000, model, envlist, xpnormdata, [(2,1), (5,2), (8,3)], lb, ub, tn=[2,9810,7245000,180,3600]), lower=0.0, upper=1.0, full_output=1)



######OLD
annlout = scipy.optimize.anneal(pysb.anneal_sundials.annealfxn, paramarr, args=(None, 20000, model, envlist, xpnormdata, [(2,1),(5,2),(8,3)], lb, ub, True, True), lower=lower, upper=upper, full_output=1)
#for annealfxncust, Td=9810, Tdvar=2691^2, Ts=180, Tsvar=60^2
annlout = scipy.optimize.anneal(pysb.anneal_sundials.annealfxncust, paramarr, args=(None, 20000, model, envlist, xpnormdata, [(2,1),(8,3)],[2,9810,7245000,180,3600], lb, ub, True, True), lower=lower, upper=upper, full_output=1)



# mompfile = numpy.load('earm_2_0_momp_parminfo.npz')
# mompidx = mompfile['arr_0']
# lb, ub, lower, upper = pysb.anneal_sundials.getgenparambounds(paramarr, omag=1, N=5000, useparams = mompidx, usemag = 3, useN=2500)
#----------bid annealing section
prmfile = numpy.load('annl_bid_prmlst.npz')
bidprm = prmfile['arr_0']
bidnum = prmfile['arr_1']
bidlst = prmfile['arr_2']
lb, ub, lower, upper = pysb.anneal_sundials.getgenparambounds(bidprm, omag=3, N=1000)
annlout = scipy.optimize.anneal(pysb.anneal_sundials.annealfxn, bidprm, args=(bidnum, 25000, model, envlist, xpdata, 4, 1, lb, ub), lower=lower, upper=upper, full_output=1)

#----------smac annealing section
prmfile = numpy.load('annl_smac_prmlst.npz')
smacprm = prmfile['arr_0']
smacnum = prmfile['arr_1']
smaclst = prmfile['arr_2']
lb, ub, lower, upper = pysb.anneal_sundials.getgenparambounds(smacprm, omag=3, N=1000)
annlout = scipy.optimize.anneal(pysb.anneal_sundials.annealfxn, smacprm, args=(smacnum, 25000, model, envlist, xpdata, 6, 2, lb, ub), lower=lower, upper=upper, full_output=1)


