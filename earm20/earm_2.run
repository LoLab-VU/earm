#---------ANNEAL ALL section
import scipy.optimize.anneal
import numpy
import pysb.anneal_sundials
from earm_2_0 import model
envlist, paramarr = pysb.anneal_sundials.annlinit(model)
xpfile = numpy.load('IC-RP_IMS-RP_EC-RP_for_fits.npz')
xpdata = xpfile['arr_0']
lb, ub, lower, upper = pysb.anneal_sundials.getgenparambounds(paramarr)
# DATA IS ALREADY NORMALIZED, NORM = TRUE
# envlist is a list of tuples which says which array from xpdata corresponds to simulation observables
annlout = scipy.optimize.anneal(pysb.anneal_sundials.annealfxn, paramarr, args=(None, 50000, model, envlist, xpdata, [(3,1),(5,2),(8,3)], lb, ub, True), lower=lower, upper=upper, full_output=1)

#----------bid annealing section
prmfile = numpy.load('annl_bid_prmlst.npz')
bidprm = prmfile['arr_0']
bidnum = prmfile['arr_1']
bidlst = prmfile['arr_2']
lb, ub, lower, upper = pysb.anneal_sundials.getgenparambounds(bidprm, omag=3, N=1000)
annlout = scipy.optimize.anneal(pysb.anneal_sundials.annealfxn, bidprm, args=(bidnum, 25000, model, envlist, xpdata, 4, 1, lb, ub), lower=lower, upper=upper, full_output=1)

#----------smac annealing section
prmfile = numpy.load('annl_smac_prmlst.npz')
smacprm = prmfile['arr_0']
smacnum = prmfile['arr_1']
smaclst = prmfile['arr_2']
lb, ub, lower, upper = pysb.anneal_sundials.getgenparambounds(smacprm, omag=3, N=1000)
annlout = scipy.optimize.anneal(pysb.anneal_sundials.annealfxn, smacprm, args=(smacnum, 25000, model, envlist, xpdata, 6, 2, lb, ub), lower=lower, upper=upper, full_output=1)


